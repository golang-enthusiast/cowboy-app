// Code generated by MockGen. DO NOT EDIT.
// Source: cowboy-app/internal/domain (interfaces: CowboyRandomGenerator)

// Package mocks is a generated GoMock package.
package mocks

import (
	gomock "github.com/golang/mock/gomock"
	reflect "reflect"
)

// MockCowboyRandomGenerator is a mock of CowboyRandomGenerator interface
type MockCowboyRandomGenerator struct {
	ctrl     *gomock.Controller
	recorder *MockCowboyRandomGeneratorMockRecorder
}

// MockCowboyRandomGeneratorMockRecorder is the mock recorder for MockCowboyRandomGenerator
type MockCowboyRandomGeneratorMockRecorder struct {
	mock *MockCowboyRandomGenerator
}

// NewMockCowboyRandomGenerator creates a new mock instance
func NewMockCowboyRandomGenerator(ctrl *gomock.Controller) *MockCowboyRandomGenerator {
	mock := &MockCowboyRandomGenerator{ctrl: ctrl}
	mock.recorder = &MockCowboyRandomGeneratorMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use
func (m *MockCowboyRandomGenerator) EXPECT() *MockCowboyRandomGeneratorMockRecorder {
	return m.recorder
}

// GetRandom mocks base method
func (m *MockCowboyRandomGenerator) GetRandom(arg0 int) int {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetRandom", arg0)
	ret0, _ := ret[0].(int)
	return ret0
}

// GetRandom indicates an expected call of GetRandom
func (mr *MockCowboyRandomGeneratorMockRecorder) GetRandom(arg0 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetRandom", reflect.TypeOf((*MockCowboyRandomGenerator)(nil).GetRandom), arg0)
}
